# Представьте, что у вас есть массив чисел, и перед вами окно определенного размера
# (скажем, окно размером из трех ячеек). Это окно начинает двигаться по массиву, сначала
# охватывая первые три числа, затем сдвигаясь на одну ячейку вправо, чтобы охватить следующие три
# числа, и так далее. Ваша задача - найти максимальное число внутри каждого такого окна,
# когда оно проходит по массиву.

# Пример: предположим, у вас есть следующий список чисел: [1, 3, -1, -3, 5, 3, 6, 7], и
# размер окна равен пяти. Задача состоит в том, чтобы найти максимальное число в каждом окне:

# Первое окно: [1, 3, -1, -3, 5] - максимальное число: 5
# Второе окно: [3, -1, -3, 5, 3] - максимальное число: 5
# Третье окно: [-1, -3, 5, 3, 6] - максимальное число: 6
# Последнее четвертое окно: [-3, 5, 3, 6, 7] - максимальное число: 7
# Итак, вы должны вернуть последовательность максимальных чисел для каждого положения окна.

# Входные данные
# Поддаются сперва числа списка, записанные через пробел. На следующей строке размер окна

# Выходные данные
# Вывести через пробел последовательно все максимумы в скользящих окнах


from collections import deque


lst = list(map(int, input().split()))
result = []

queue = deque(maxlen=int(input()))

for i in lst:
    queue.append(i)
    if len(queue) == queue.maxlen:
        result.append(max(queue))

print(*result)
