#                                Рисуночки
# В этом задании вам нужно создать программу, которая на основе инструкций будет рисовать
# двухмерные геометрические фигуры. Ваша программа должна уметь рисовать как квадраты,
# так и треугольники.
#
# Инструкции, которые программа должна получать от пользователя:
#
# сперва код геометрической фигуры: sq или tr
# затем высота фигуры от 1 до 9
# Квадрат - это фигура с четырьмя углами, где все стороны равны и все углы прямые. Высота,
# введенная пользователем, представляет собой количество строк (в терминале), на которых будет
# нарисован квадрат. Высота шрифта в терминале вдвое больше ширины. Поэтому количество символов
# в строке должно быть равно высоте × 2.
#
# Ниже приведен пример квадрата с высотой 4:
#
# ########
# ########
# ########
# ########
#
# Треугольник - это фигура с тремя углами. Высота, введенная пользователем, представляет собой
# количество строк (в терминале), на которых будет нарисован треугольник. Верхушка треугольника
# должна всегда состоять из одного символа, расположенного по центру. Для каждой новой строки
# ширина треугольника должна увеличиваться на два символа.
#
# Ниже приведен пример треугольника с высотой 4:
#
#    #
#   ###
#  #####
# #######
#
# Если пользователь вводит неправильный код геометрической фигуры или высоту не в пределах
# от 1 до 9, выведите сообщение WRONG_DATA


class Square:

    def __init__(self, size):
        self.size = size

    def __str__(self):
        lst = '#' * self.size * 2
        return '\n'.join([lst for _ in range(self.size)])


class Triangle:
    def __init__(self, size):
        self.size = size

    def __str__(self):
        lst = ''
        count = -1
        for _ in range(1, self.size + 1):
            count += 2
            lst += ('#' * count).center(self.size * 2 - 1) + '\n'
        return lst


def is_correct(shape, size):
    if not (shape in figures and 1 <= size <= 9):
        return 'WRONG_DATA'
    else:
        if shape == figures[0]:
            result = Square(size)
            return result
        elif shape == figures[1]:
            result = Triangle(size)
            return result


figures = ['sq', 'tr']
shape = input()
size = int(input())

result = is_correct(shape, size)
print(result)
